<sequence name="Modefin Loadbalancer">
  <property name="url1" scope="default" type="STRING" expression="get-property('registry', 'gov:/apimgt/configs/test@url1')"/>
  <property name="url2" scope="default" type="STRING" expression="get-property('registry', 'gov:/apimgt/configs/test@url2')"/>
  <property name="REST_URL_POSTFIX" scope="axis2" action="remove" description="REST_URL_POSTFIX"/>
  <property name="Authorization" value="Basic YWRtaW46YWRtaW4=" scope="transport"/>
  <property name="Content-Type" value="application/xml" scope="transport"/>
  <property expression="get-property('url1')" name="uri.var.httpendpointurl1" scope="default" type="STRING"/>
  <property expression="get-property('url2')" name="uri.var.httpendpointurl2" scope="default" type="STRING"/>
  
  <log level="full"/>
  <call blocking="true" description="Modefin Request" onError="errorHandlingSequence">
    <log>
      <property expression="get-property('uri.var.httpendpointurl2')" name="CALLED---------------------------------------"/>
    </log>
    <endpoint>
      <loadbalance endpointName="loadBalancedEndpoint">
        <endpoint>
          <http method="post" uri-template="{uri.var.httpendpointurl1}">
            <timeout>
              <duration>30000</duration>
              <responseAction>fault</responseAction>
            </timeout>
          </http>
        </endpoint>
        <endpoint>
          <http method="post" uri-template="{uri.var.httpendpointurl2}">
            <timeout>
              <duration>30000</duration>
              <responseAction>fault</responseAction>
            </timeout>
          </http>
        </endpoint>
      </loadbalance>
    </endpoint>
    <respond/>
  </call>
  <log level="full"/>
</sequence>

<sequence name="errorHandlingSequence">
  <log level="custom">
    <property name="ERROR" value="Error calling endpoint - triggered error handling sequence"/>
  </log>

  <payloadFactory media-type="xml">
    <format>
      <response>
        <status>FAILED</status>
        <message>Error while making the API call. Please try again later.</message>
      </response>
    </format>
    </args>
  </payloadFactory>
  <respond/>
</sequence>
